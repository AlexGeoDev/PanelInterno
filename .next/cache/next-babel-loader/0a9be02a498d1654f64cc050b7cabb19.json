{"ast":null,"code":"//declarandole el listener\nconst listeners = {};\nlet idlistener = 1;\n\nconst subscribe = (eventName, handler) => {\n  //revisando si no hay listener con el nombre del evento que se le pasa\n  if (!listeners[eventName]) {\n    //inicializando la lista que va a contener los handlers\n    listeners[eventName] = [];\n  } //obteniendo los eventos \n\n\n  let events = listeners[eventName];\n  console.log(\"adding:\", eventName, handler);\n  events.push({\n    id: idlistener++,\n    callback: handler\n  });\n  return idlistener;\n};\n\nconst notify = (eventName, data) => {\n  let events = listeners[eventName];\n  console.log(\"notify\", events);\n\n  if (events) {\n    events.forEach(handler => {\n      console.log(\"call handler:\", eventName, data);\n      handler.callback(data);\n    });\n  }\n};\n\nconst remove = (eventName, id) => {\n  console.log(\"remove\", eventName, id);\n  let events = listeners[eventName];\n\n  if (events) {\n    for (var i = events.length - 1; i >= 0; i--) {\n      if (events[i].id === id) {\n        events.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  console.log(\"remove\", listeners[eventName]);\n};\n\nexport { subscribe, notify, remove };","map":{"version":3,"sources":["D:/DESARROLLO/PANELCAJERO/business/state.js"],"names":["listeners","idlistener","subscribe","eventName","handler","events","console","log","push","id","callback","notify","data","forEach","remove","i","length","splice"],"mappings":"AAAA;AACA,MAAMA,SAAS,GAAG,EAAlB;AACA,IAAIC,UAAU,GAAG,CAAjB;;AACA,MAAMC,SAAS,GAAG,CAACC,SAAD,EAAWC,OAAX,KAAuB;AAEvC;AACA,MAAI,CAACJ,SAAS,CAACG,SAAD,CAAd,EAA0B;AACxB;AACAH,IAAAA,SAAS,CAACG,SAAD,CAAT,GAAuB,EAAvB;AACD,GANsC,CAOzC;;;AACE,MAAIE,MAAM,GAAGL,SAAS,CAACG,SAAD,CAAtB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,SAAvB,EAAkCC,OAAlC;AACAC,EAAAA,MAAM,CAACG,IAAP,CAAY;AAACC,IAAAA,EAAE,EAAER,UAAU,EAAf;AAAkBS,IAAAA,QAAQ,EAACN;AAA3B,GAAZ;AAEA,SAAOH,UAAP;AACD,CAbD;;AAeA,MAAMU,MAAM,GAAG,CAACR,SAAD,EAAWS,IAAX,KAAoB;AACjC,MAAIP,MAAM,GAAGL,SAAS,CAACG,SAAD,CAAtB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;;AACA,MAAIA,MAAJ,EAAW;AACTA,IAAAA,MAAM,CAACQ,OAAP,CAAeT,OAAO,IAAI;AACxBE,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,SAA7B,EAAwCS,IAAxC;AACAR,MAAAA,OAAO,CAACM,QAAR,CAAiBE,IAAjB;AACD,KAHD;AAID;AACF,CATD;;AAWA,MAAME,MAAM,GAAG,CAACX,SAAD,EAAWM,EAAX,KAAkB;AAC/BH,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,SAAtB,EAAiCM,EAAjC;AACA,MAAIJ,MAAM,GAAGL,SAAS,CAACG,SAAD,CAAtB;;AACA,MAAIE,MAAJ,EAAW;AACT,SAAI,IAAIU,CAAC,GAAGV,MAAM,CAACW,MAAP,GAAgB,CAA5B,EAA+BD,CAAC,IAAI,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;AAC1C,UAAGV,MAAM,CAACU,CAAD,CAAN,CAAUN,EAAV,KAAiBA,EAApB,EAAwB;AACtBJ,QAAAA,MAAM,CAACY,MAAP,CAAcF,CAAd,EAAiB,CAAjB;AACA;AACD;AACF;AACF;;AAEDT,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBP,SAAS,CAACG,SAAD,CAA/B;AACD,CAbD;;AAeA,SAAQD,SAAR,EAAkBS,MAAlB,EAAyBG,MAAzB","sourcesContent":["//declarandole el listener\r\nconst listeners = {};\r\nlet idlistener = 1;\r\nconst subscribe = (eventName,handler) => {\r\n\r\n  //revisando si no hay listener con el nombre del evento que se le pasa\r\n  if (!listeners[eventName]){\r\n    //inicializando la lista que va a contener los handlers\r\n    listeners[eventName] = [];\r\n  }\r\n//obteniendo los eventos \r\n  let events = listeners[eventName];\r\n  console.log(\"adding:\" ,eventName ,handler);\r\n  events.push({id: idlistener++,callback:handler});\r\n\r\n  return idlistener;\r\n};\r\n\r\nconst notify = (eventName,data) => {\r\n  let events = listeners[eventName];\r\n  console.log(\"notify\", events);\r\n  if (events){\r\n    events.forEach(handler => {\r\n      console.log(\"call handler:\" ,eventName ,data);\r\n      handler.callback(data);\r\n    });\r\n  }\r\n};\r\n\r\nconst remove = (eventName,id) => {\r\n  console.log(\"remove\", eventName, id);\r\n  let events = listeners[eventName];\r\n  if (events){\r\n    for(var i = events.length - 1; i >= 0; i--) {\r\n      if(events[i].id === id) {\r\n        events.splice(i, 1);\r\n        break;\r\n      }\r\n    }    \r\n  }\r\n\r\n  console.log(\"remove\", listeners[eventName]);\r\n};\r\n\r\nexport {subscribe,notify,remove};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}