{"ast":null,"code":"var _jsxFileName = \"D:\\\\DESARROLLO\\\\PANELCAJERO\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport DesktopLayout from \"../components/WebDesktop/DesktopLayout\";\nimport Link from \"next/link\";\nimport Card from \"../components/card\";\nimport { subscribe, remove } from \"../business/state\";\nimport transactionBusiness from \"../business/transactionBusiness\";\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return __jsx(DesktopLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, __jsx(User, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {},\n      merchantCode: \"\"\n    };\n  }\n\n  async getData(serial) {\n    var user = await transactionBusiness.fetchUserBySerial(serial);\n    console.log(user);\n    this.setState({\n      user\n    });\n  }\n\n  componentDidMount() {\n    if (!this.idsubscribe) {\n      this.idsubscribe = subscribe(\"onSearch\", serial => {\n        this.getData(serial);\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    remove(\"onSearch\", this.idsubscribe);\n  }\n\n  render() {\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Comercial Name:\"), \" \", this.state.user.comercialName, \" \"), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Business Name:\"), \" \", this.state.user.businessName, \" \"), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Email:\"), \" \", this.state.user.email, \" \"), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Identification:\"), \" \", this.state.user.identification, \" \"), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Merchant Code:\"), \" \", __jsx(\"input\", {\n      required: true,\n      onChange: e => this.setState({\n        merchantCode: e.target.value\n      }),\n      value: this.state.merchantCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Actualizar\"))));\n  }\n\n  handleSubmit() {\n    console.log(\"send data\");\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["D:/DESARROLLO/PANELCAJERO/pages/index.js"],"names":["React","DesktopLayout","Link","Card","subscribe","remove","transactionBusiness","Index","Component","constructor","props","render","User","state","user","merchantCode","getData","serial","fetchUserBySerial","console","log","setState","componentDidMount","idsubscribe","componentWillUnmount","handleSubmit","comercialName","businessName","email","identification","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport DesktopLayout from \"../components/WebDesktop/DesktopLayout\";\nimport Link from \"next/link\";\nimport Card from \"../components/card\";\nimport { subscribe, remove } from \"../business/state\";\nimport transactionBusiness from \"../business/transactionBusiness\";\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n  render() {\n    return (\n      <DesktopLayout>\n        <User />\n      </DesktopLayout>\n    );\n  }\n}\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { user: {}, merchantCode:\"\" };\n  }\n\n  async getData(serial){\n    var user = await transactionBusiness.fetchUserBySerial(serial);    \n    console.log(user);\n    this.setState({ user });\n  }\n\n  componentDidMount() {\n    if (!this.idsubscribe){\n        this.idsubscribe =     subscribe(\"onSearch\", (serial) => {\n        this.getData(serial);\n      })\n    }\n\n  }\n\n  componentWillUnmount() {\n    remove(\"onSearch\", this.idsubscribe);\n  }\n\n  render() {\n\n\n\n    return (\n      <React.Fragment>\n        <form onSubmit={this.handleSubmit}>\n          <div><span>Comercial Name:</span> {this.state.user.comercialName} </div>\n          <div><span>Business Name:</span> {this.state.user.businessName} </div>\n          <div><span>Email:</span> {this.state.user.email} </div>\n          <div><span>Identification:</span> {this.state.user.identification} </div>        \n          <div><span>Merchant Code:</span> <input required={true} onChange={e=>this.setState({merchantCode:e.target.value})} value={this.state.merchantCode} ></input></div>\n          <div><button type=\"submit\">Actualizar</button></div>\n        </form>\n      </React.Fragment>\n    );\n  }\n\n  handleSubmit(){\n    console.log(\"send data\");\n  }\n}\n\n\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}