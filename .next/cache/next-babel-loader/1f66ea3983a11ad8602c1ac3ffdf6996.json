{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\DESARROLLO\\\\PANELCAJERO\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport DesktopLayout from \"../components/WebDesktop/DesktopLayout\";\nimport Link from \"next/link\";\nimport Card from \"../components/card\";\nimport { subscribe, remove } from \"../business/state\";\nimport transactionBusiness from \"../business/transactionBusiness\";\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index(props) {\n    _classCallCheck(this, Index);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(DesktopLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, __jsx(User, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nvar User =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(User, _React$Component2);\n\n  function User(props) {\n    var _this;\n\n    _classCallCheck(this, User);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(User).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      console.log(\"send data:\", _this.state.merchantCode, _this.state.user);\n      var update = transactionBusiness.updateSegment(_this.state.user.id, _this.state.merchantCode);\n      e.preventDefault();\n    });\n\n    _this.state = {\n      user: {},\n      merchantCode: \"\",\n      id: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(User, [{\n    key: \"getData\",\n    value: function () {\n      var _getData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(serial) {\n        var user;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return transactionBusiness.fetchUserBySerial(serial);\n\n              case 2:\n                user = _context.sent;\n                console.log(user);\n                this.setState({\n                  user: user\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getData(_x) {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (!this.idsubscribe) {\n        this.idsubscribe = subscribe(\"onSearch\", function (serial) {\n          _this2.getData(serial);\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      remove(\"onSearch\", this.idsubscribe);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Id:\"), \" \", this.state.user.id, \" \"), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Comercial Name:\"), \" \", this.state.user.comercialName, \" \"), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Business Name:\"), \" \", this.state.user.businessName, \" \"), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Email:\"), \" \", this.state.user.email, \" \"), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Identification:\"), \" \", this.state.user.identification, \" \"), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Merchant Code:\"), \" \", __jsx(\"input\", {\n        required: true,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            merchantCode: e.target.value\n          });\n        },\n        value: this.state.merchantCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Actualizar\"))));\n    }\n  }]);\n\n  return User;\n}(React.Component);\n\nexport default Index;","map":{"version":3,"sources":["D:/DESARROLLO/PANELCAJERO/pages/index.js"],"names":["React","DesktopLayout","Link","Card","subscribe","remove","transactionBusiness","Index","props","Component","User","e","console","log","state","merchantCode","user","update","updateSegment","id","preventDefault","serial","fetchUserBySerial","setState","idsubscribe","getData","handleSubmit","comercialName","businessName","email","identification","target","value"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,mBAAlC;AACA,OAAOC,mBAAP,MAAgC,iCAAhC;;IAEMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA,8EACXA,KADW;AAGlB;;;;6BAEQ;AACP,aACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EAZiBR,KAAK,CAACS,S;;IAepBC,I;;;;;AACJ,gBAAYF,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;;AADiB,mEA2CJ,UAACG,CAAD,EAAO;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,MAAKC,KAAL,CAAWC,YAArC,EAAmD,MAAKD,KAAL,CAAWE,IAA9D;AACA,UAAMC,MAAM,GAAGX,mBAAmB,CAACY,aAApB,CAAkC,MAAKJ,KAAL,CAAWE,IAAX,CAAgBG,EAAlD,EAAsD,MAAKL,KAAL,CAAWC,YAAjE,CAAf;AACAJ,MAAAA,CAAC,CAACS,cAAF;AACD,KA/CkB;;AAEjB,UAAKN,KAAL,GAAa;AAAEE,MAAAA,IAAI,EAAE,EAAR;AAAYD,MAAAA,YAAY,EAAE,EAA1B;AAA8BI,MAAAA,EAAE,EAAE;AAAlC,KAAb;AAFiB;AAGlB;;;;;;;gDAEaE,M;;;;;;;uBACKf,mBAAmB,CAACgB,iBAApB,CAAsCD,MAAtC,C;;;AAAbL,gBAAAA,I;AACJJ,gBAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACA,qBAAKO,QAAL,CAAc;AAAEP,kBAAAA,IAAI,EAAJA;AAAF,iBAAd;;;;;;;;;;;;;;;;;;wCAGkB;AAAA;;AAClB,UAAI,CAAC,KAAKQ,WAAV,EAAuB;AACrB,aAAKA,WAAL,GAAmBpB,SAAS,CAAC,UAAD,EAAa,UAACiB,MAAD,EAAY;AACnD,UAAA,MAAI,CAACI,OAAL,CAAaJ,MAAb;AACD,SAF2B,CAA5B;AAGD;AAEF;;;2CAEsB;AACrBhB,MAAAA,MAAM,CAAC,UAAD,EAAa,KAAKmB,WAAlB,CAAN;AACD;;;6BAEQ;AAAA;;AAIP,aACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,KAAKE,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAL,OAAuB,KAAKZ,KAAL,CAAWE,IAAX,CAAgBG,EAAvC,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAL,OAAmC,KAAKL,KAAL,CAAWE,IAAX,CAAgBW,aAAnD,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAL,OAAkC,KAAKb,KAAL,CAAWE,IAAX,CAAgBY,YAAlD,MAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAL,OAA0B,KAAKd,KAAL,CAAWE,IAAX,CAAgBa,KAA1C,MAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAL,OAAmC,KAAKf,KAAL,CAAWE,IAAX,CAAgBc,cAAnD,MALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAL,OAAiC;AAAO,QAAA,QAAQ,EAAE,IAAjB;AAAuB,QAAA,QAAQ,EAAE,kBAAAnB,CAAC;AAAA,iBAAI,MAAI,CAACY,QAAL,CAAc;AAAER,YAAAA,YAAY,EAAEJ,CAAC,CAACoB,MAAF,CAASC;AAAzB,WAAd,CAAJ;AAAA,SAAlC;AAAuF,QAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWC,YAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjC,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAL,CAPF,CADF,CADF;AAaD;;;;EA1CgBf,KAAK,CAACS,S;;AAqDzB,eAAeF,KAAf","sourcesContent":["import React from \"react\";\nimport DesktopLayout from \"../components/WebDesktop/DesktopLayout\";\nimport Link from \"next/link\";\nimport Card from \"../components/card\";\nimport { subscribe, remove } from \"../business/state\";\nimport transactionBusiness from \"../business/transactionBusiness\";\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n  render() {\n    return (\n      <DesktopLayout>\n        <User />\n      </DesktopLayout>\n    );\n  }\n}\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { user: {}, merchantCode: \"\", id: \"\" };\n  }\n\n  async getData(serial) {\n    var user = await transactionBusiness.fetchUserBySerial(serial);\n    console.log(user);\n    this.setState({ user });\n  }\n\n  componentDidMount() {\n    if (!this.idsubscribe) {\n      this.idsubscribe = subscribe(\"onSearch\", (serial) => {\n        this.getData(serial);\n      })      \n    }\n\n  }\n\n  componentWillUnmount() {\n    remove(\"onSearch\", this.idsubscribe);\n  }\n\n  render() {\n\n\n\n    return (\n      <React.Fragment>\n        <form onSubmit={this.handleSubmit}>\n          <div><span>Id:</span> {this.state.user.id} </div>\n          <div><span>Comercial Name:</span> {this.state.user.comercialName} </div>\n          <div><span>Business Name:</span> {this.state.user.businessName} </div>\n          <div><span>Email:</span> {this.state.user.email} </div>\n          <div><span>Identification:</span> {this.state.user.identification} </div>\n          <div><span>Merchant Code:</span> <input required={true} onChange={e => this.setState({ merchantCode: e.target.value })} value={this.state.merchantCode} ></input></div>\n          <div><button type=\"submit\">Actualizar</button></div>\n        </form>\n      </React.Fragment>\n    );\n  }\n\n  handleSubmit = (e) => {\n    console.log(\"send data:\", this.state.merchantCode, this.state.user);\n    const update = transactionBusiness.updateSegment(this.state.user.id, this.state.merchantCode)\n    e.preventDefault();\n  }\n}\n\n\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}