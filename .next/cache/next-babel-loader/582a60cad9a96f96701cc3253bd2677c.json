{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\DESARROLLO\\\\PANELCAJERO\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport DesktopLayout from \"../components/WebDesktop/DesktopLayout\";\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport Card from \"../components/card\";\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Index).apply(this, arguments));\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$data = this.props.data,\n          accessToken = _this$props$data.accessToken,\n          refreshToken = _this$props$data.refreshToken;\n      localStorage.setItem('accessToken', accessToken);\n      localStorage.setItem('refreshToken', refreshToken);\n      /*interval = setInterval(() => {\n        console.log('LLAMANDO SERVICIO :)')\n        const url = 'https://api.cajero.co/api/v1/token/refresh';\n        const data = {\n          refreshToken: localStorage.getItem('refreshToken'),\n        };\n        try {\n          const response = fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n              'Content-Type': 'application/json',\n              'mode': 'no-cors',\n              'Authorization' : 'Bearer ' + localStorage.getItem('accessToken')\n            }\n          });\n          \n          const json = response.json();\n          \n          console.log(json.localStorage.getItem('accessToken'));\n          \n          localStorage.setItem('accessToken', json.data.accessToken);\n          localStorage.setItem('refreshToken', json.data.refreshToken);\n         } catch (e) {\n          console.log('error probando el access token' + e);\n        }\n      }, 5000)*/\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(DesktopLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, __jsx(Card, {\n        name: 'Ventas',\n        total: '500',\n        color: 'gray',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), __jsx(Card, {\n        name: 'Comisiones',\n        total: '1000',\n        color: 'skyblue',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), __jsx(Card, {\n        name: 'Retefuente',\n        total: '1000',\n        color: 'red',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), __jsx(Card, {\n        name: 'Reteica',\n        total: '1000',\n        color: 'pink',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), __jsx(Card, {\n        name: 'Reteica',\n        total: '1000',\n        color: 'orange',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"probando \", this.props.data.accessToken, \" \"), console.log(this.props.data.accessToken));\n    }\n  }]);\n\n  return Index;\n}(React.Component); //obtenemos las propiedades iniciales\n\n\nIndex.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var url, data, response, json;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = 'https://api.cajero.co/api/v1/login';\n          data = {\n            username: 'pedralbes',\n            password: 'Aaa12715!'\n          };\n          _context.prev = 2;\n          _context.next = 5;\n          return fetch(url, {\n            method: 'POST',\n            // or 'PUT'\n            body: _JSON$stringify(data),\n            // data can be `string` or {object}!\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n\n        case 5:\n          response = _context.sent;\n          _context.next = 8;\n          return response.json();\n\n        case 8:\n          json = _context.sent;\n          console.log(json);\n          return _context.abrupt(\"return\", json);\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](2);\n          console.log(_context.t0);\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[2, 13]]);\n}));\nexport default Index;","map":{"version":3,"sources":["D:/DESARROLLO/PANELCAJERO/pages/index.js"],"names":["React","DesktopLayout","fetch","Link","Card","Index","props","data","accessToken","refreshToken","localStorage","setItem","console","log","Component","getInitialProps","url","username","password","method","body","headers","response","json"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport DesktopLayout from \"../components/WebDesktop/DesktopLayout\";\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport Card from \"../components/card\";\n\nclass Index extends React.Component {\n  componentDidMount() {\n    const { \n      accessToken,\n      refreshToken,\n    } = this.props.data; \n\n    localStorage.setItem('accessToken', accessToken);\n    localStorage.setItem('refreshToken', refreshToken);\n    /*interval = setInterval(() => {\n      console.log('LLAMANDO SERVICIO :)')\n      const url = 'https://api.cajero.co/api/v1/token/refresh';\n      const data = {\n        refreshToken: localStorage.getItem('refreshToken'),\n      };\n      try {\n        const response = fetch(url, {\n          method: 'POST',\n          body: JSON.stringify(data),\n          headers: {\n            'Content-Type': 'application/json',\n            'mode': 'no-cors',\n            'Authorization' : 'Bearer ' + localStorage.getItem('accessToken')\n          }\n        });\n        \n        const json = response.json();\n        \n        console.log(json.localStorage.getItem('accessToken'));\n        \n        localStorage.setItem('accessToken', json.data.accessToken);\n        localStorage.setItem('refreshToken', json.data.refreshToken);\n\n      } catch (e) {\n        console.log('error probando el access token' + e);\n      }\n    }, 5000)*/\n  }\n\n  render() {\n    return (\n      <DesktopLayout>\n        <div className=\"row\">\n          <Card name={'Ventas'} total={'500'} color={'gray'}/>\n          <Card name={'Comisiones'} total={'1000'} color={'skyblue'}/>\n          <Card name={'Retefuente'} total={'1000'} color={'red'}/>\n          <Card name={'Reteica'} total={'1000'} color={'pink'}/>\n          <Card name={'Reteica'} total={'1000'} color={'orange'}/>\n        </div>\n        <div>probando {this.props.data.accessToken} </div>\n        {console.log(this.props.data.accessToken)}\n      </DesktopLayout>\n    );\n  }\n}\n\n//obtenemos las propiedades iniciales\nIndex.getInitialProps = async function() {\n  const url = 'https://api.cajero.co/api/v1/login';\n  const data = {\n    username: 'pedralbes',\n    password: 'Aaa12715!'\n  };\n  try {\n    const response = await fetch(url, {\n      method: 'POST', // or 'PUT'\n      body: JSON.stringify(data), // data can be `string` or {object}!\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    const json = await response.json();\n    console.log(json);\n    return json;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}