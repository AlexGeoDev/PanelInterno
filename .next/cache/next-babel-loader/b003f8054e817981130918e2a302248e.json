{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"D:\\\\DESARROLLO\\\\PANELCAJERO\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport DesktopLayout from \"../components/WebDesktop/DesktopLayout\";\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport Card from \"../components/card\";\n\nclass Index extends React.Component {\n  componentDidMount() {\n    const {\n      accessToken,\n      refreshToken\n    } = this.props.data;\n    localStorage.setItem('accessToken', accessToken);\n    localStorage.setItem('refreshToken', refreshToken);\n    /*interval = setInterval(() => {\n      console.log('LLAMANDO SERVICIO :)')\n      const url = 'https://api.cajero.co/api/v1/token/refresh';\n      const data = {\n        refreshToken: localStorage.getItem('refreshToken'),\n      };\n      try {\n        const response = fetch(url, {\n          method: 'POST',\n          body: JSON.stringify(data),\n          headers: {\n            'Content-Type': 'application/json',\n            'mode': 'no-cors',\n            'Authorization' : 'Bearer ' + localStorage.getItem('accessToken')\n          }\n        });\n        \n        const json = response.json();\n        \n        console.log(json.localStorage.getItem('accessToken'));\n        \n        localStorage.setItem('accessToken', json.data.accessToken);\n        localStorage.setItem('refreshToken', json.data.refreshToken);\n       } catch (e) {\n        console.log('error probando el access token' + e);\n      }\n    }, 5000)*/\n  }\n\n  render() {\n    return __jsx(DesktopLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(Card, {\n      name: 'Ventas',\n      total: '500',\n      color: 'gray',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), __jsx(Card, {\n      name: 'Comisiones',\n      total: '1000',\n      color: 'skyblue',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), __jsx(Card, {\n      name: 'Retefuente',\n      total: '1000',\n      color: 'red',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), __jsx(Card, {\n      name: 'Reteica',\n      total: '1000',\n      color: 'pink',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), __jsx(Card, {\n      name: 'Reteica',\n      total: '1000',\n      color: 'orange',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"probando \", this.props.data.accessToken, \" \"), console.log(this.props.data.accessToken));\n  }\n\n} //obtenemos las propiedades iniciales\n\n\nIndex.getInitialProps = async function () {\n  const url = 'https://api.cajero.co/api/v1/login';\n  const data = {\n    username: 'pedralbes',\n    password: 'Aaa12715!'\n  };\n\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      // or 'PUT'\n      body: _JSON$stringify(data),\n      // data can be `string` or {object}!\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    return json;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport default Index;","map":{"version":3,"sources":["D:/DESARROLLO/PANELCAJERO/pages/index.js"],"names":["React","DesktopLayout","fetch","Link","Card","Index","Component","componentDidMount","accessToken","refreshToken","props","data","localStorage","setItem","render","console","log","getInitialProps","url","username","password","response","method","body","headers","json","e"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAClCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AACJC,MAAAA,WADI;AAEJC,MAAAA;AAFI,QAGF,KAAKC,KAAL,CAAWC,IAHf;AAKAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCL,WAApC;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCJ,YAArC;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BD;;AAEDK,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAE,QAAZ;AAAsB,MAAA,KAAK,EAAE,KAA7B;AAAoC,MAAA,KAAK,EAAE,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAE,YAAZ;AAA0B,MAAA,KAAK,EAAE,MAAjC;AAAyC,MAAA,KAAK,EAAE,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAE,YAAZ;AAA0B,MAAA,KAAK,EAAE,MAAjC;AAAyC,MAAA,KAAK,EAAE,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAE,SAAZ;AAAuB,MAAA,KAAK,EAAE,MAA9B;AAAsC,MAAA,KAAK,EAAE,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAE,SAAZ;AAAuB,MAAA,KAAK,EAAE,MAA9B;AAAsC,MAAA,KAAK,EAAE,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAe,KAAKJ,KAAL,CAAWC,IAAX,CAAgBH,WAA/B,MARF,EASGO,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,IAAX,CAAgBH,WAA5B,CATH,CADF;AAaD;;AArDiC,C,CAwDpC;;;AACAH,KAAK,CAACY,eAAN,GAAwB,kBAAiB;AACvC,QAAMC,GAAG,GAAG,oCAAZ;AACA,QAAMP,IAAI,GAAG;AACXQ,IAAAA,QAAQ,EAAE,WADC;AAEXC,IAAAA,QAAQ,EAAE;AAFC,GAAb;;AAIA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACgB,GAAD,EAAM;AAChCI,MAAAA,MAAM,EAAE,MADwB;AAChB;AAChBC,MAAAA,IAAI,EAAE,gBAAeZ,IAAf,CAF0B;AAEJ;AAC5Ba,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHuB,KAAN,CAA5B;AAQA,UAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAT,EAAnB;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACA,WAAOA,IAAP;AACD,GAZD,CAYE,OAAOC,CAAP,EAAU;AACVX,IAAAA,OAAO,CAACC,GAAR,CAAYU,CAAZ;AACD;AACF,CArBD;;AAuBA,eAAerB,KAAf","sourcesContent":["import React from \"react\";\nimport DesktopLayout from \"../components/WebDesktop/DesktopLayout\";\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport Card from \"../components/card\";\n\nclass Index extends React.Component {\n  componentDidMount() {\n    const { \n      accessToken,\n      refreshToken,\n    } = this.props.data; \n\n    localStorage.setItem('accessToken', accessToken);\n    localStorage.setItem('refreshToken', refreshToken);\n    /*interval = setInterval(() => {\n      console.log('LLAMANDO SERVICIO :)')\n      const url = 'https://api.cajero.co/api/v1/token/refresh';\n      const data = {\n        refreshToken: localStorage.getItem('refreshToken'),\n      };\n      try {\n        const response = fetch(url, {\n          method: 'POST',\n          body: JSON.stringify(data),\n          headers: {\n            'Content-Type': 'application/json',\n            'mode': 'no-cors',\n            'Authorization' : 'Bearer ' + localStorage.getItem('accessToken')\n          }\n        });\n        \n        const json = response.json();\n        \n        console.log(json.localStorage.getItem('accessToken'));\n        \n        localStorage.setItem('accessToken', json.data.accessToken);\n        localStorage.setItem('refreshToken', json.data.refreshToken);\n\n      } catch (e) {\n        console.log('error probando el access token' + e);\n      }\n    }, 5000)*/\n  }\n\n  render() {\n    return (\n      <DesktopLayout>\n        <div className=\"row\">\n          <Card name={'Ventas'} total={'500'} color={'gray'}/>\n          <Card name={'Comisiones'} total={'1000'} color={'skyblue'}/>\n          <Card name={'Retefuente'} total={'1000'} color={'red'}/>\n          <Card name={'Reteica'} total={'1000'} color={'pink'}/>\n          <Card name={'Reteica'} total={'1000'} color={'orange'}/>\n        </div>\n        <div>probando {this.props.data.accessToken} </div>\n        {console.log(this.props.data.accessToken)}\n      </DesktopLayout>\n    );\n  }\n}\n\n//obtenemos las propiedades iniciales\nIndex.getInitialProps = async function() {\n  const url = 'https://api.cajero.co/api/v1/login';\n  const data = {\n    username: 'pedralbes',\n    password: 'Aaa12715!'\n  };\n  try {\n    const response = await fetch(url, {\n      method: 'POST', // or 'PUT'\n      body: JSON.stringify(data), // data can be `string` or {object}!\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    const json = await response.json();\n    console.log(json);\n    return json;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}