{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.ccf40e56312f1ff2c020.hot-update.js","sources":["webpack:///./business/state.js"],"sourcesContent":["//declarandole el listener\r\nconst listeners = {};\r\nlet idlistener = 1;\r\nconst subscribe = (eventName,handler) => {\r\n\r\n  //revisando si no hay listener con el nombre del evento que se le pasa\r\n  if (!listeners[eventName]){\r\n    //inicializando la lista que va a contener los handlers\r\n    listeners[eventName] = [];\r\n  }\r\n//obteniendo los eventos \r\n  let events = listeners[eventName];\r\n  console.log(\"adding:\" ,eventName ,handler);\r\n  events.push({id: idlistener++,callback:handler});\r\n\r\n  return idlistener;\r\n};\r\n\r\nconst notify = (eventName,data) => {\r\n  let events = listeners[eventName];\r\n  console.log(\"notify\", events);\r\n  if (events){\r\n    events.forEach(handler => {\r\n      console.log(\"call handler:\" ,eventName ,data);\r\n      handler.callback(data);\r\n    });\r\n  }\r\n};\r\n\r\nconst remove = (eventName,id) => {\r\n  console.log(\"remove\", eventName, id);\r\n  let events = listeners[eventName];\r\n  if (events){\r\n    for(var i = events.length - 1; i >= 0; i--) {\r\n      if(events[i].id === id) {\r\n        events.splice(i, 1);\r\n        break;\r\n      }\r\n  }\r\n    listeners[eventName] = events.filter(x => id !== x.id);\r\n  }\r\n\r\n  console.log(\"remove\", listeners[eventName]);\r\n};\r\n\r\nexport {subscribe,notify,remove};\r\n\r\n\r\n\r\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}